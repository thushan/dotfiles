alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

alias psync='rsync -avh --info=progress2'
alias paths='echo -e ${PATH//:/\\n}'

# ls specific with eza extra love
if [ -x "$(command -v eza)" ]; then
	alias ls='eza'
	alias ll='eza -lh'
	alias lg='eza -l --git'
	alias lsl='eza -lah'
	alias tree='eza --tree --level=5'
	alias lsf='eza -1'
	alias lst='eza -lTh --level=5'
	alias lss='eza -lTh --level=5 --no-permissions --no-user'
fi

alias l='ls -lbFh'
alias ll='ls -lah'
alias llm='ll --sort=modified'

alias prune_ds="find . -type f -name '*.DS_Store' -delete"
alias prune_node="find . -type d -name 'node_modules' -prune -exec rm -rf '{}' +"
alias prune_thumbs="find . -type f -name '*.thumb' -delete"

alias wttr='curl wttr.in'
alias now='date "+%Y-%m-%d %H:%M:%S"'

alias path='echo $PATH | tr ":" "\n"'
alias hist='history | grep'

alias reload='exec "$SHELL"'
alias reloadrc='source ~/.bashrc'
alias reloadzsh='source ~/.zshrc'

# git specific
if [ -x "$(command -v git)" ]; then
	alias gs='git status'
	alias gss='git status -s'
	alias gp='git push'
	alias gpl='git pull'
	alias gclean='git clean -fd'
	alias gpristine='git reset --hard && git clean -dfx'
	alias gexport='git archive --format zip --output'
	alias gsubu='git submodule update --init --recursive'
	alias gbranch='git checkout -b'
	alias gl='git log --graph --decorate --pretty=oneline --abbrev-commit'

	if [ -x "$(command -v batcat)" ]; then
		batdiff() {
			git diff --name-only --relative --diff-filter=d | xargs batcat --diff
		}
	elif [ -x "$(command -v bat)" ]; then
		batdiff() {
			git diff --name-only --relative --diff-filter=d | xargs bat --diff
		}
	fi
fi

if [ -x "$(command -v claude)" ]; then
	if [ -x "$(command -v bunx)" ]; then
		alias claude-usage='bunx ccusage'
		alias claude-usage-rt='bunx ccusage blocks --live'
	fi
	alias claude-yolo='claude --dangerously-skip-permissions'
	alias claude-mcp-init='
	claude mcp add serena -- uvx --from git+https://github.com/oraios/serena serena start-mcp-server --context ide-assistant --project $(pwd) &&
	claude mcp add sequential-thinking -- uvx --from git+https://github.com/arben-adm/mcp-sequential-thinking --with portalocker mcp-sequential-thinking &&
	claude mcp add --transport http context7 https://mcp.context7.com/mcp
	'
fi

if [ -x "$(command -v ollama)" ]; then
	alias ollama_update='ollama list | awk '\''NR>1 {system("ollama pull " $1)}'\'''
fi

if [ -x "$(command -v scp)" ]; then
	alias scpp="scp -o PreferredAuthentications=password"
fi

if [ -x "$(command -v dig)" ]; then
	# network
	alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
fi

if [ -x "$(command -v python3)" ]; then
	# serve files via python
	alias pyserve='python3 -m http.server'
fi

if [[ "$OSTYPE" =~ ^linux ]]; then
	if [ -f ~/.aliases-linux ]; then
		. ~/.aliases-linux
	fi
fi

if [[ "$OSTYPE" =~ ^darwin ]]; then
	if [ -f ~/.aliases-macos ]; then
		. ~/.aliases-macos
	fi
fi

if [[ "$OSTYPE" =~ ^msys ]]; then
	if [ -f ~/.aliases-win ]; then
		. ~/.aliases-win
	fi
fi
